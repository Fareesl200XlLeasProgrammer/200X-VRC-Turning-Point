16
{"last_modification_time":1553136391,"language":0,"import_file":"d:/github/200x-vrc-turning-point/worlds/src/functions.h","args_hash":4820576854396186429,"includes":[{"line":9,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/controller/chassiscontrollerintegrated.hpp"},{"line":10,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/controller/chassiscontrollerpid.hpp"},{"line":11,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/skidsteermodel.hpp"},{"line":12,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/xdrivemodel.hpp"},{"line":13,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/mathutil.hpp"},{"line":14,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/motor/motor.hpp"},{"line":15,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/motor/motorgroup.hpp"},{"line":16,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/rotarysensor/adiencoder.hpp"},{"line":17,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/rotarysensor/integratedencoder.hpp"},{"line":18,"resolved_path":"d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/util/timeutilfactory.hpp"}],"dependencies":["d:/github/200x-vrc-turning-point/worlds/src/functions.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/main.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/api.h","d:/pros/toolchain/usr/arm-none-eabi/include/errno.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/errno.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/reent.h","d:/pros/toolchain/usr/arm-none-eabi/include/_ansi.h","d:/pros/toolchain/usr/arm-none-eabi/include/newlib.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/config.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/features.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_types.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/_types.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/_default_types.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/lock.h","d:/pros/toolchain/usr/arm-none-eabi/include/math.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/cdefs.h","d:/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdint.h","d:/pros/toolchain/usr/arm-none-eabi/include/stdint.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_intsup.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_stdint.h","d:/pros/toolchain/usr/arm-none-eabi/include/stdio.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/types.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/endian.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/select.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_timeval.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/timespec.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_timespec.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_pthreadtypes.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/sched.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/stdio.h","d:/pros/toolchain/usr/arm-none-eabi/include/stdlib.h","d:/pros/toolchain/usr/arm-none-eabi/include/alloca.h","d:/pros/toolchain/usr/arm-none-eabi/include/unistd.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/unistd.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/adi.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/llemu.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lvgl.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_task.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_ll.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_mem.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_hal/lv_hal.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_hal/lv_hal_disp.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_color.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_hal/lv_hal_indev.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_area.h","d:/pros/toolchain/usr/arm-none-eabi/include/string.h","d:/pros/toolchain/usr/arm-none-eabi/include/xlocale.h","d:/pros/toolchain/usr/arm-none-eabi/include/strings.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_hal/lv_hal_tick.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_core/lv_group.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_core/lv_obj.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_core/lv_style.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_anim.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_font.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_fonts/lv_symbol_def.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_core/lv_vdb.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_themes/lv_theme.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_themes/lv_theme_alien.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_themes/lv_theme_night.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_bar.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_btn.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_core/lv_indev.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_cont.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_label.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_txt.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_btnm.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_cb.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_chart.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_line.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_ddlist.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_page.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_gauge.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_lmeter.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_img.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_draw/lv_draw.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_misc/lv_fs.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_kb.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_led.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_list.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_mbox.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_roller.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_slider.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_sw.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_ta.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_tabview.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_objx/lv_win.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/misc.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/motors.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/rtos.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/vision.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/controller/chassiscontrollerintegrated.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/controller/chassiscontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/controller/chassisscales.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qangle.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/rquantity.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qlength.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/chassismodel.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/readonlychassismodel.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/coreprosapi.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/device/motor/abstractmotor.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/device/rotarysensor/continuousrotarysensor.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/device/rotarysensor/rotarysensor.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncposintegratedcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncpositioncontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asynccontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/closedloopcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qtime.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/logging.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/abstracttimer.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qfrequency.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/timeutil.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/util/settledutil.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/abstractrate.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/supplier.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/controller/chassiscontrollerpid.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/iterative/iterativepospidcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/iterative/iterativepositioncontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/iterative/iterativecontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/passthroughfilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/skidsteermodel.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/threeencoderskidsteermodel.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/chassis/model/xdrivemodel.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/util/mathutil.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/motor/motor.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/motor/motorgroup.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/rotarysensor/adiencoder.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/rotarysensor/integratedencoder.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/util/timeutilfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/chassis/model/chassismodelfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asynclinearmotionprofilecontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/mathutil.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/structs.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/fit.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/spline.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/trajectory.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/modifiers/tank.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/modifiers/swerve.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/followers/encoder.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/followers/distance.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/io.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncmotionprofilecontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qangularspeed.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qspeed.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncpospidcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncwrapper.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncvelintegratedcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncvelocitycontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/async/asyncvelpidcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/iterative/iterativevelpidcontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/iterative/iterativevelocitycontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/velmath.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/composablefilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qangularacceleration.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/iterative/iterativemotorvelocitycontroller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/util/controllerrunner.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/util/flywheelsimulator.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/control/util/pidtuner.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/control/async/asynccontrollerfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/rotarysensor/adigyro.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/rotarysensor/potentiometer.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/control/iterative/iterativecontrollerfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/control/util/controllerrunnerfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/util/rate.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/control/util/pidtunerfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/control/util/settledutilfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/adiultrasonic.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/medianfilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/button/adibutton.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/device/button/buttonbase.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/device/button/abstractbutton.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/button/controllerbutton.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/controllerutil.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/controller.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/device/vision.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/averagefilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/demafilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/ekffilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/emafilter.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/filter/filteredcontrollerinput.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/filter/velmathfactory.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qacceleration.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qangularjerk.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qarea.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qforce.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qmass.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qjerk.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qpressure.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qtorque.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/api/units/qvolume.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/impl/util/timer.hpp","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/api_legacy.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/autovars.cpp","d:/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h","d:/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdarg.h","d:/pros/toolchain/usr/arm-none-eabi/include/sys/_sigset.h","d:/pros/toolchain/usr/arm-none-eabi/include/_newlib_version.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/ieeefp.h","d:/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdbool.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/_endian.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/types.h","d:/pros/toolchain/usr/arm-none-eabi/include/machine/stdlib.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/pros/colors.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/display/lv_conf.h","d:/github/200x-vrc-turning-point/200x-vrc-turning-point/worlds/include/okapi/pathfinder/include/pathfinder/lib.h","d:/github/200x-vrc-turning-point/worlds/include/display/lv_conf.h","d:/github/200x-vrc-turning-point/worlds/include/display/lvgl.h"],"skipped_by_preprocessor":[],"types":[],"funcs":[],"vars":[{"id":0,"usr":18151447335766162643,"detailed_name":"okapi_makeCreateEndParams","short_name_offset":0,"short_name_size":25,"hover":"#define okapi_makeCreateEndParams\n  AbstractMotor::GearsetRatioPair igearset = AbstractMotor::gearset::red,\n                                  const ChassisScales &iscales = ChassisScales({1, 1}),\n                                  const TimeUtil &itimeUtil = TimeUtilFactory::create()","comments":"","declarations":[],"spell":"21:9-21:34|-1|1|2","extent":"21:9-24:88|-1|1|0","uses":[],"kind":255,"storage":0},{"id":1,"usr":13400498879825330716,"detailed_name":"okapi_makeCreateEndBody","short_name_offset":0,"short_name_size":23,"hover":"#define okapi_makeCreateEndBody igearset, iscales, itimeUtil","comments":"","declarations":[],"spell":"26:9-26:32|-1|1|2","extent":"26:9-26:61|-1|1|0","uses":[],"kind":255,"storage":0},{"id":2,"usr":14773056196622682150,"detailed_name":"okapi_tankParams","short_name_offset":0,"short_name_size":16,"hover":"#define okapi_tankParams(MotorType) MotorType ileftMtr, MotorType irightMtr","comments":"","declarations":[],"spell":"28:9-28:25|-1|1|2","extent":"28:9-28:76|-1|1|0","uses":[],"kind":255,"storage":0},{"id":3,"usr":2647677256634755650,"detailed_name":"okapi_tankBody","short_name_offset":0,"short_name_size":14,"hover":"#define okapi_tankBody(MotorType)\n  std::make_shared<MotorType>(ileftMtr), std::make_shared<MotorType>(irightMtr)","comments":"","declarations":[],"spell":"30:9-30:23|-1|1|2","extent":"30:9-31:80|-1|1|0","uses":[],"kind":255,"storage":0},{"id":4,"usr":15296886571055278069,"detailed_name":"okapi_tankSensorBody","short_name_offset":0,"short_name_size":20,"hover":"#define okapi_tankSensorBody ileftMtr.getEncoder(), irightMtr.getEncoder()","comments":"","declarations":[],"spell":"33:9-33:29|-1|1|2","extent":"33:9-33:75|-1|1|0","uses":[],"kind":255,"storage":0},{"id":5,"usr":17797364405755147865,"detailed_name":"okapi_xdriveParams","short_name_offset":0,"short_name_size":18,"hover":"#define okapi_xdriveParams(MotorType)\n  MotorType itopLeftMtr, MotorType itopRightMtr, MotorType ibottomRightMtr, MotorType ibottomLeftMtr","comments":"","declarations":[],"spell":"35:9-35:27|-1|1|2","extent":"35:9-36:101|-1|1|0","uses":[],"kind":255,"storage":0},{"id":6,"usr":3802000278355162986,"detailed_name":"okapi_xdriveBody","short_name_offset":0,"short_name_size":16,"hover":"#define okapi_xdriveBody(MotorType)\n  std::make_shared<MotorType>(itopLeftMtr), std::make_shared<MotorType>(itopRightMtr),\n    std::make_shared<MotorType>(ibottomRightMtr), std::make_shared<MotorType>(ibottomLeftMtr)","comments":"","declarations":[],"spell":"38:9-38:25|-1|1|2","extent":"38:9-40:94|-1|1|0","uses":[],"kind":255,"storage":0},{"id":7,"usr":11500686475149398379,"detailed_name":"okapi_xdriveSensorBody","short_name_offset":0,"short_name_size":22,"hover":"#define okapi_xdriveSensorBody itopLeftMtr.getEncoder(), itopRightMtr.getEncoder()","comments":"","declarations":[],"spell":"42:9-42:31|-1|1|2","extent":"42:9-42:83|-1|1|0","uses":[],"kind":255,"storage":0},{"id":8,"usr":16174538008660200036,"detailed_name":"okapi_makeCreateIntImpl","short_name_offset":0,"short_name_size":23,"hover":"#define okapi_makeCreateIntImpl(driveType, motorType, methodName)\n  static auto methodName(okapi_##driveType##Params(motorType), okapi_makeCreateEndParams) {\n    return methodName(\n      okapi_##driveType##Body(motorType), okapi_##driveType##SensorBody, okapi_makeCreateEndBody);\n  }","comments":"","declarations":[],"spell":"44:9-44:32|-1|1|2","extent":"44:9-48:4|-1|1|0","uses":[],"kind":255,"storage":0},{"id":9,"usr":11214121924190910281,"detailed_name":"okapi_makeCreateIntImpl2","short_name_offset":0,"short_name_size":24,"hover":"#define okapi_makeCreateIntImpl2(motorType, methodName)\n  okapi_makeCreateIntImpl(tank, motorType, methodName);\n  okapi_makeCreateIntImpl(xdrive, motorType, methodName)","comments":"","declarations":[],"spell":"50:9-50:33|-1|1|2","extent":"50:9-52:57|-1|1|0","uses":[],"kind":255,"storage":0},{"id":10,"usr":11842994363301835051,"detailed_name":"okapi_makeCreateInt","short_name_offset":0,"short_name_size":19,"hover":"#define okapi_makeCreateInt(motorType)\n  okapi_makeCreateIntImpl2(motorType, create);\n  okapi_makeCreateIntImpl2(motorType, createPtr)","comments":"","declarations":[],"spell":"54:9-54:28|-1|1|2","extent":"54:9-56:49|-1|1|0","uses":[],"kind":255,"storage":0},{"id":11,"usr":11327443632531665656,"detailed_name":"okapi_pidGains2Params","short_name_offset":0,"short_name_size":21,"hover":"#define okapi_pidGains2Params()\n  const IterativePosPIDController::Gains &idistanceGains,\n    const IterativePosPIDController::Gains &iangleGains","comments":"","declarations":[],"spell":"58:9-58:30|-1|1|2","extent":"58:9-60:56|-1|1|0","uses":[],"kind":255,"storage":0},{"id":12,"usr":13921073088888069645,"detailed_name":"okapi_pidGains2Body","short_name_offset":0,"short_name_size":19,"hover":"#define okapi_pidGains2Body()\n  std::make_unique<IterativePosPIDController>(idistanceGains, TimeUtilFactory::create()),\n    std::make_unique<IterativePosPIDController>(iangleGains, TimeUtilFactory::create()),\n    std::make_unique<IterativePosPIDController>(iangleGains, TimeUtilFactory::create())","comments":"","declarations":[],"spell":"62:9-62:28|-1|1|2","extent":"62:9-65:88|-1|1|0","uses":[],"kind":255,"storage":0},{"id":13,"usr":17991760408911528751,"detailed_name":"okapi_pidGains3Params","short_name_offset":0,"short_name_size":21,"hover":"#define okapi_pidGains3Params()\n  const IterativePosPIDController::Gains &idistanceGains,\n    const IterativePosPIDController::Gains &iangleGains,\n    const IterativePosPIDController::Gains &iturnGains","comments":"","declarations":[],"spell":"67:9-67:30|-1|1|2","extent":"67:9-70:55|-1|1|0","uses":[],"kind":255,"storage":0},{"id":14,"usr":10814553078370061968,"detailed_name":"okapi_pidGains3Body","short_name_offset":0,"short_name_size":19,"hover":"#define okapi_pidGains3Body()\n  std::make_unique<IterativePosPIDController>(idistanceGains, TimeUtilFactory::create()),\n    std::make_unique<IterativePosPIDController>(iangleGains, TimeUtilFactory::create()),\n    std::make_unique<IterativePosPIDController>(iturnGains, TimeUtilFactory::create())","comments":"","declarations":[],"spell":"72:9-72:28|-1|1|2","extent":"72:9-75:87|-1|1|0","uses":[],"kind":255,"storage":0},{"id":15,"usr":17459927652674678076,"detailed_name":"okapi_makeCreatePidImpl","short_name_offset":0,"short_name_size":23,"hover":"#define okapi_makeCreatePidImpl(driveType, pidGainsType, motorType, methodName)\n  static auto methodName(okapi_##driveType##Params(motorType),\n                         okapi_##pidGainsType##Params(),\n                         okapi_makeCreateEndParams) {\n    return methodName(okapi_##driveType##Body(motorType),\n                      okapi_##driveType##SensorBody,\n                      okapi_##pidGainsType##Body(),\n                      okapi_makeCreateEndBody);\n  }","comments":"","declarations":[],"spell":"77:9-77:32|-1|1|2","extent":"77:9-85:4|-1|1|0","uses":[],"kind":255,"storage":0},{"id":16,"usr":8486456001891337040,"detailed_name":"okapi_makeCreatePidImpl2","short_name_offset":0,"short_name_size":24,"hover":"#define okapi_makeCreatePidImpl2(pidGainsType, motorType, methodName)\n  okapi_makeCreatePidImpl(tank, pidGainsType, motorType, methodName);\n  okapi_makeCreatePidImpl(xdrive, pidGainsType, motorType, methodName)","comments":"","declarations":[],"spell":"87:9-87:33|-1|1|2","extent":"87:9-89:71|-1|1|0","uses":[],"kind":255,"storage":0},{"id":17,"usr":16194638236904189829,"detailed_name":"okapi_makeCreatePidImpl3","short_name_offset":0,"short_name_size":24,"hover":"#define okapi_makeCreatePidImpl3(motorType, methodName)\n  okapi_makeCreatePidImpl2(pidGains2, motorType, methodName);\n  okapi_makeCreatePidImpl2(pidGains3, motorType, methodName)","comments":"","declarations":[],"spell":"91:9-91:33|-1|1|2","extent":"91:9-93:61|-1|1|0","uses":[],"kind":255,"storage":0},{"id":18,"usr":10464006329904893227,"detailed_name":"okapi_makeCreatePid","short_name_offset":0,"short_name_size":19,"hover":"#define okapi_makeCreatePid(motorType)\n  okapi_makeCreatePidImpl3(motorType, create);\n  okapi_makeCreatePidImpl3(motorType, createPtr)","comments":"","declarations":[],"spell":"95:9-95:28|-1|1|2","extent":"95:9-97:49|-1|1|0","uses":[],"kind":255,"storage":0},{"id":19,"usr":10072034339680502857,"detailed_name":"okapi_sensorParams","short_name_offset":0,"short_name_size":18,"hover":"#define okapi_sensorParams(SensorType) const SensorType &ileftSens, const SensorType &irightSens","comments":"","declarations":[],"spell":"99:9-99:27|-1|1|2","extent":"99:9-99:97|-1|1|0","uses":[],"kind":255,"storage":0},{"id":20,"usr":5534127962477537322,"detailed_name":"okapi_sensorBody","short_name_offset":0,"short_name_size":16,"hover":"#define okapi_sensorBody(SensorType)\n  std::make_shared<SensorType>(ileftSens), std::make_shared<SensorType>(irightSens)","comments":"","declarations":[],"spell":"101:9-101:25|-1|1|2","extent":"101:9-102:84|-1|1|0","uses":[],"kind":255,"storage":0},{"id":21,"usr":13068532052869088869,"detailed_name":"okapi_makeCreatePidWithSensorImpl","short_name_offset":0,"short_name_size":33,"hover":"#define okapi_makeCreatePidWithSensorImpl(\n  driveType, sensorType, pidGainsType, motorType, methodName)\n  static auto methodName(okapi_##driveType##Params(motorType),\n                         okapi_sensorParams(sensorType),\n                         okapi_##pidGainsType##Params(),\n                         okapi_makeCreateEndParams) {\n    return methodName(okapi_##driveType##Body(motorType),\n                      okapi_sensorBody(sensorType),\n                      okapi_##pidGainsType##Body(),\n                      okapi_makeCreateEndBody);\n  }","comments":"","declarations":[],"spell":"104:9-104:42|-1|1|2","extent":"104:9-114:4|-1|1|0","uses":[],"kind":255,"storage":0},{"id":22,"usr":17374787260938114825,"detailed_name":"okapi_makeCreatePidWithSensorImpl2","short_name_offset":0,"short_name_size":34,"hover":"#define okapi_makeCreatePidWithSensorImpl2(sensorType, pidGainsType, motorType, methodName)\n  okapi_makeCreatePidWithSensorImpl(tank, sensorType, pidGainsType, motorType, methodName);\n  okapi_makeCreatePidWithSensorImpl(xdrive, sensorType, pidGainsType, motorType, methodName)","comments":"","declarations":[],"spell":"116:9-116:43|-1|1|2","extent":"116:9-118:93|-1|1|0","uses":[],"kind":255,"storage":0},{"id":23,"usr":5569783251466985367,"detailed_name":"okapi_makeCreatePidWithSensorImpl3","short_name_offset":0,"short_name_size":34,"hover":"#define okapi_makeCreatePidWithSensorImpl3(pidGainsType, motorType, methodName)\n  okapi_makeCreatePidWithSensorImpl2(IntegratedEncoder, pidGainsType, motorType, methodName);\n  okapi_makeCreatePidWithSensorImpl2(ADIEncoder, pidGainsType, motorType, methodName)","comments":"","declarations":[],"spell":"120:9-120:43|-1|1|2","extent":"120:9-122:86|-1|1|0","uses":[],"kind":255,"storage":0},{"id":24,"usr":12866955245832465703,"detailed_name":"okapi_makeCreatePidWithSensorImpl4","short_name_offset":0,"short_name_size":34,"hover":"#define okapi_makeCreatePidWithSensorImpl4(motorType, methodName)\n  okapi_makeCreatePidWithSensorImpl3(pidGains2, motorType, methodName);\n  okapi_makeCreatePidWithSensorImpl3(pidGains3, motorType, methodName)","comments":"","declarations":[],"spell":"124:9-124:43|-1|1|2","extent":"124:9-126:71|-1|1|0","uses":[],"kind":255,"storage":0},{"id":25,"usr":17186895920050844609,"detailed_name":"okapi_makeCreatePidWithSensor","short_name_offset":0,"short_name_size":29,"hover":"#define okapi_makeCreatePidWithSensor(motorType)\n  okapi_makeCreatePidWithSensorImpl4(motorType, create);\n  okapi_makeCreatePidWithSensorImpl4(motorType, createPtr)","comments":"","declarations":[],"spell":"128:9-128:38|-1|1|2","extent":"128:9-130:59|-1|1|0","uses":[],"kind":255,"storage":0},{"id":26,"usr":6163129172707378070,"detailed_name":"okapi_makeCreateAll","short_name_offset":0,"short_name_size":19,"hover":"#define okapi_makeCreateAll(motorType)\n  okapi_makeCreateInt(motorType);\n  okapi_makeCreatePid(motorType);\n  okapi_makeCreatePidWithSensor(motorType)","comments":"","declarations":[],"spell":"132:9-132:28|-1|1|2","extent":"132:9-135:43|-1|1|0","uses":["221:3-221:22|-1|1|4","222:3-222:22|-1|1|4"],"kind":255,"storage":0},{"id":27,"usr":11727543867371458138,"detailed_name":"okapi_baseTankParams","short_name_offset":0,"short_name_size":20,"hover":"#define okapi_baseTankParams\n  const std::shared_ptr<AbstractMotor> &ileftMtr, const std::shared_ptr<AbstractMotor> &irightMtr","comments":"","declarations":[],"spell":"137:9-137:29|-1|1|2","extent":"137:9-138:98|-1|1|0","uses":[],"kind":255,"storage":0},{"id":28,"usr":3491547867687574320,"detailed_name":"okapi_baseTankBody","short_name_offset":0,"short_name_size":18,"hover":"#define okapi_baseTankBody ileftMtr, irightMtr","comments":"","declarations":[],"spell":"140:9-140:27|-1|1|2","extent":"140:9-140:47|-1|1|0","uses":[],"kind":255,"storage":0},{"id":29,"usr":6894551639125131472,"detailed_name":"okapi_baseTankControllerBody","short_name_offset":0,"short_name_size":28,"hover":"#define okapi_baseTankControllerBody\n  std::make_unique<AsyncPosIntegratedController>(ileftMtr, TimeUtilFactory::create()),\n    std::make_unique<AsyncPosIntegratedController>(irightMtr, TimeUtilFactory::create())","comments":"","declarations":[],"spell":"142:9-142:37|-1|1|2","extent":"142:9-144:89|-1|1|0","uses":[],"kind":255,"storage":0},{"id":30,"usr":13547458080379888818,"detailed_name":"okapi_baseXdriveParams","short_name_offset":0,"short_name_size":22,"hover":"#define okapi_baseXdriveParams\n  const std::shared_ptr<AbstractMotor> &itopLeftMtr,\n    const std::shared_ptr<AbstractMotor> &itopRightMtr,\n    const std::shared_ptr<AbstractMotor> &ibottomRightMtr,\n    const std::shared_ptr<AbstractMotor> &ibottomLeftMtr","comments":"","declarations":[],"spell":"146:9-146:31|-1|1|2","extent":"146:9-150:57|-1|1|0","uses":[],"kind":255,"storage":0},{"id":31,"usr":3886349629653947734,"detailed_name":"okapi_baseXdriveBody","short_name_offset":0,"short_name_size":20,"hover":"#define okapi_baseXdriveBody itopLeftMtr, itopRightMtr, ibottomRightMtr, ibottomLeftMtr","comments":"","declarations":[],"spell":"152:9-152:29|-1|1|2","extent":"152:9-152:88|-1|1|0","uses":[],"kind":255,"storage":0},{"id":32,"usr":11929106209798172250,"detailed_name":"okapi_baseXdriveControllerBody","short_name_offset":0,"short_name_size":30,"hover":"#define okapi_baseXdriveControllerBody\n  std::make_unique<AsyncPosIntegratedController>(itopLeftMtr, TimeUtilFactory::create()),\n    std::make_unique<AsyncPosIntegratedController>(itopRightMtr, TimeUtilFactory::create())","comments":"","declarations":[],"spell":"154:9-154:39|-1|1|2","extent":"154:9-156:92|-1|1|0","uses":[],"kind":255,"storage":0},{"id":33,"usr":4648631425398517579,"detailed_name":"okapi_baseSensorParams","short_name_offset":0,"short_name_size":22,"hover":"#define okapi_baseSensorParams\n  const std::shared_ptr<ContinuousRotarySensor> &ileftSensor,\n    const std::shared_ptr<ContinuousRotarySensor> &irightSensor","comments":"","declarations":[],"spell":"158:9-158:31|-1|1|2","extent":"158:9-160:64|-1|1|0","uses":[],"kind":255,"storage":0},{"id":34,"usr":7993501105814428821,"detailed_name":"okapi_baseSensorBody","short_name_offset":0,"short_name_size":20,"hover":"#define okapi_baseSensorBody ileftSensor, irightSensor","comments":"","declarations":[],"spell":"162:9-162:29|-1|1|2","extent":"162:9-162:55|-1|1|0","uses":[],"kind":255,"storage":0},{"id":35,"usr":15399695230537467246,"detailed_name":"okapi_makeCreateBaseIntImpl","short_name_offset":0,"short_name_size":27,"hover":"#define okapi_makeCreateBaseIntImpl(\n  returnType, allocateExpr, methodName, modelType, fullModelTypeName)\n  static returnType methodName(\n    okapi_##modelType##Params, okapi_baseSensorParams, okapi_makeCreateEndParams) {\n    return allocateExpr(\n      itimeUtil,\n      std::make_shared<fullModelTypeName>(okapi_##modelType##Body,\n                                          okapi_baseSensorBody,\n                                          toUnderlyingType(igearset.internalGearset)),\n      okapi_##modelType##ControllerBody,\n      igearset,\n      iscales);\n  }","comments":"","declarations":[],"spell":"164:9-164:36|-1|1|2","extent":"164:9-176:4|-1|1|0","uses":[],"kind":255,"storage":0},{"id":36,"usr":5526462201729743125,"detailed_name":"okapi_makeCreateBaseInt","short_name_offset":0,"short_name_size":23,"hover":"#define okapi_makeCreateBaseInt(returnType, allocateExpr, methodName)\n  okapi_makeCreateBaseIntImpl(returnType, allocateExpr, methodName, baseTank, SkidSteerModel);\n  okapi_makeCreateBaseIntImpl(returnType, allocateExpr, methodName, baseXdrive, XDriveModel)","comments":"","declarations":[],"spell":"178:9-178:32|-1|1|2","extent":"178:9-180:93|-1|1|0","uses":["224:3-224:26|-1|1|4","225:3-225:26|-1|1|4"],"kind":255,"storage":0},{"id":37,"usr":14349134469034317067,"detailed_name":"okapi_createAllocExpr","short_name_offset":0,"short_name_size":21,"hover":"#define okapi_createAllocExpr ChassisControllerPID out","comments":"","declarations":[],"spell":"182:9-182:30|-1|1|2","extent":"182:9-182:55|-1|1|0","uses":[],"kind":255,"storage":0},{"id":38,"usr":14552415369060426193,"detailed_name":"okapi_createEndExpr","short_name_offset":0,"short_name_size":19,"hover":"#define okapi_createEndExpr\n  out.startThread();\n  return out","comments":"","declarations":[],"spell":"184:9-184:28|-1|1|2","extent":"184:9-186:13|-1|1|0","uses":[],"kind":255,"storage":0},{"id":39,"usr":2164626702419148409,"detailed_name":"okapi_createPtrAllocExpr","short_name_offset":0,"short_name_size":24,"hover":"#define okapi_createPtrAllocExpr auto out = std::make_shared<ChassisControllerPID>","comments":"","declarations":[],"spell":"188:9-188:33|-1|1|2","extent":"188:9-188:83|-1|1|0","uses":[],"kind":255,"storage":0},{"id":40,"usr":17110131225337364862,"detailed_name":"okapi_createPtrEndExpr","short_name_offset":0,"short_name_size":22,"hover":"#define okapi_createPtrEndExpr\n  out->startThread();\n  return out","comments":"","declarations":[],"spell":"190:9-190:31|-1|1|2","extent":"190:9-192:13|-1|1|0","uses":[],"kind":255,"storage":0},{"id":41,"usr":8324675932468847535,"detailed_name":"okapi_makeCreateBasePidImpl","short_name_offset":0,"short_name_size":27,"hover":"#define okapi_makeCreateBasePidImpl(returnType, methodName, modelType, fullModelTypeName)\n  static returnType methodName(okapi_##modelType##Params,\n                               okapi_baseSensorParams,\n                               std::unique_ptr<IterativePosPIDController> idistanceController,\n                               std::unique_ptr<IterativePosPIDController> iangleController,\n                               std::unique_ptr<IterativePosPIDController> iturnController,\n                               okapi_makeCreateEndParams) {\n    okapi_##methodName##AllocExpr(\n      itimeUtil,\n      std::make_shared<fullModelTypeName>(okapi_##modelType##Body,\n                                          okapi_baseSensorBody,\n                                          toUnderlyingType(igearset.internalGearset)),\n      std::move(idistanceController),\n      std::move(iangleController),\n      std::move(iturnController),\n      igearset,\n      iscales);\n    okapi_##methodName##EndExpr;\n  }","comments":"","declarations":[],"spell":"194:9-194:36|-1|1|2","extent":"194:9-212:4|-1|1|0","uses":[],"kind":255,"storage":0},{"id":42,"usr":14845222641004654799,"detailed_name":"okapi_makeCreateBasePid","short_name_offset":0,"short_name_size":23,"hover":"#define okapi_makeCreateBasePid(returnType, methodName)\n  okapi_makeCreateBasePidImpl(returnType, methodName, baseTank, SkidSteerModel);\n  okapi_makeCreateBasePidImpl(returnType, methodName, baseXdrive, XDriveModel)","comments":"","declarations":[],"spell":"214:9-214:32|-1|1|2","extent":"214:9-216:79|-1|1|0","uses":["229:3-229:26|-1|1|4","230:3-230:26|-1|1|4"],"kind":255,"storage":0}]}